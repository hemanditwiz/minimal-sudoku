{"version":3,"sources":["../../sudoku-wasm/pkg/sudoku_wasm_bg.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../../sudoku-wasm/pkg sync","wasm/index.ts"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","getArrayU8FromWasm0","Object","freeze","Easy","Medium","Hard","Expert","f","Grid","this","row","col","difficulty","ptr0","len0","create","prototype","__wrap","__wbindgen_object_drop_ref","arg0","__wbindgen_is_undefined","__wbg_buffer_88f603259d7a7b82","__wbg_newwithbyteoffsetandlength_5ba4b4465eeaa8d3","arg1","arg2","Uint32Array","__wbg_getRandomValues_f5e14ab7ac8e995d","getRandomValues","__wbg_randomFillSync_d5bd2d655fdf256a","randomFillSync","__wbg_self_1b7a39e3a92c949c","self","apply","arguments","e","__wbg_require_604837428532a733","__wbg_crypto_968f1772287e2df0","crypto","__wbg_getRandomValues_a3d34b4fee3c2869","__wbindgen_throw","Error","__wbindgen_memory","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","webpackEmptyContext","req","keys","resolve","exports","id","wasmGrid","new"],"mappings":"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","file":"static/js/3.eb8b2f7c.chunk.js","sourcesContent":["import * as wasm from './sudoku_wasm_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n*/\nexport const Difficulty = Object.freeze({ Easy:3,\"3\":\"Easy\",Medium:4,\"4\":\"Medium\",Hard:5,\"5\":\"Hard\",Expert:10,\"10\":\"Expert\", });\n/**\n*/\nexport class Grid {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Grid.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_grid_free(ptr);\n    }\n    /**\n    * @param {string} difficulty\n    * @returns {Grid}\n    */\n    static new(difficulty) {\n        var ptr0 = passStringToWasm0(difficulty, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.grid_new(ptr0, len0);\n        return Grid.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    get_grid_size() {\n        var ret = wasm.grid_get_grid_size(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_removed_blocks_count() {\n        var ret = wasm.grid_get_removed_blocks_count(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} row\n    * @param {number} col\n    * @returns {number}\n    */\n    get_block_value(row, col) {\n        var ret = wasm.grid_get_block_value(this.ptr, row, col);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_blocks() {\n        var ret = wasm.grid_get_blocks(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {Uint32Array}\n    */\n    get_blocks_array() {\n        var ret = wasm.grid_get_blocks_array(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {number} row\n    * @param {number} col\n    * @returns {number}\n    */\n    get_index(row, col) {\n        var ret = wasm.grid_get_index(this.ptr, row, col);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_difficulty() {\n        var ret = wasm.grid_get_difficulty(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {string} difficulty\n    */\n    set_difficulty(difficulty) {\n        var ptr0 = passStringToWasm0(difficulty, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.grid_set_difficulty(this.ptr, ptr0, len0);\n    }\n    /**\n    */\n    solve() {\n        wasm.grid_solve(this.ptr);\n    }\n    /**\n    */\n    generate_puzzle() {\n        wasm.grid_generate_puzzle(this.ptr);\n    }\n    /**\n    */\n    clear() {\n        wasm.grid_clear(this.ptr);\n    }\n}\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport const __wbg_buffer_88f603259d7a7b82 = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_newwithbyteoffsetandlength_5ba4b4465eeaa8d3 = function(arg0, arg1, arg2) {\n    var ret = new Uint32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_getRandomValues_f5e14ab7ac8e995d = function(arg0, arg1, arg2) {\n    getObject(arg0).getRandomValues(getArrayU8FromWasm0(arg1, arg2));\n};\n\nexport const __wbg_randomFillSync_d5bd2d655fdf256a = function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n};\n\nexport const __wbg_self_1b7a39e3a92c949c = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nexport const __wbg_require_604837428532a733 = function(arg0, arg1) {\n    var ret = require(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_crypto_968f1772287e2df0 = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_getRandomValues_a3d34b4fee3c2869 = function(arg0) {\n    var ret = getObject(arg0).getRandomValues;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 66;","import { Grid } from 'sudoku-wasm';\n\nexport const wasmGrid = Grid.new('easy');"],"sourceRoot":""}